{"mappings":"gfAAA,IAOIA,EACAC,EACAC,EATJC,EAAAC,EAAA,SAEMC,EAAaC,SAASC,cAAc,kBACpCC,EAAYF,SAASC,cAAc,iBACnCE,EAAcH,SAASC,cAAc,mBACrCG,EAAOJ,SAASC,cAAc,SA4BpC,SAASI,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACLN,EACFI,EAAQ,CAAEG,SAAAT,EAAUU,MAAAT,IAEpBM,EAAO,CAAEE,SAAAT,EAAUU,MAAAT,G,GAEpBA,E,IAIFU,MAAK,SAAAC,G,IAAGH,EAAQG,EAARH,SAAUI,EAAKD,EAALF,MACjBnB,EAAAuB,OAAOC,QAAQ,qBAAoCC,OAAfP,EAAS,QAAYO,OAANH,EAAM,M,IAE1DI,OAAM,SAAAL,G,IAAGH,EAAQG,EAARH,SAAUS,EAAKN,EAALF,MAClBnB,EAAAuB,OAAOK,QAAQ,oBAAmCH,OAAfP,EAAS,QAAYO,OAANE,EAAM,M,IAvC9DzB,EAAW2B,iBAAiB,SAAS,SAAAC,GACnCjC,EAAQkC,OAAOD,EAAIE,cAAcC,M,IAGnC5B,EAAUwB,iBAAiB,SAAS,SAAAC,GAClChC,EAAOiC,OAAOD,EAAIE,cAAcC,M,IAGlC3B,EAAYuB,iBAAiB,SAAS,SAAAC,GACpC/B,EAASgC,OAAOD,EAAIE,cAAcC,M,IAGpC1B,EAAKsB,iBAAiB,UAEtB,SAAkBC,GAChBA,EAAII,iBACJ,IAAK,IAAIC,EAAI,EAAGA,GAAKpC,EAAQoC,GAAK,EAChC3B,EAAc2B,EAAGtC,GACjBA,GAASC,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst delayInput = document.querySelector('[name=\"delay\"]');\nconst stepInput = document.querySelector('[name=\"step\"]');\nconst amountInput = document.querySelector('[name=\"amount\"]');\nconst form = document.querySelector('.form');\n\nlet delay;\nlet step;\nlet amount;\n\ndelayInput.addEventListener('input', evt => {\n  delay = Number(evt.currentTarget.value);\n});\n\nstepInput.addEventListener('input', evt => {\n  step = Number(evt.currentTarget.value);\n});\n\namountInput.addEventListener('input', evt => {\n  amount = Number(evt.currentTarget.value);\n});\n\nform.addEventListener('submit', onSubmit);\n\nfunction onSubmit(evt) {\n  evt.preventDefault();\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay);\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n\n  promise\n    .then(({ position, delay }) => {\n      Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n    });\n}\n"],"names":["$ce04d3a99e08e73b$var$delay","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$delayInput","document","querySelector","$ce04d3a99e08e73b$var$stepInput","$ce04d3a99e08e73b$var$amountInput","$ce04d3a99e08e73b$var$form","$ce04d3a99e08e73b$var$createPromise","position1","delay1","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","position","delay","then","param","delay2","Notify","success","concat","catch","delay3","failure","addEventListener","evt","Number","currentTarget","value","preventDefault","i"],"version":3,"file":"03-promises.8f1c288c.js.map"}