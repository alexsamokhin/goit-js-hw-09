{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAaC,SAASC,cAAc,kBACpCC,EAAYF,SAASC,cAAc,iBACnCE,EAAcH,SAASC,cAAc,mBACrCG,EAAOJ,SAASC,cAAc,SAEpC,IAAII,EACAC,EACAC,EAwBJ,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACLN,EACFI,EAAQ,CAAEG,SAAAT,EAAUU,MAAAT,IAEpBM,EAAO,CAAEE,SAAAT,EAAUU,MAAAT,GAAQ,GAE5BA,EAAM,IAIRU,MAAK,EAACF,SAAEA,EAAUC,MAAAE,MACjBxB,EAAAyB,OAAOC,QAAQ,qBAAqBL,QAAeG,MAAU,IAE9DG,OAAM,EAACN,SAAEA,EAAUC,MAAAM,MAClB5B,EAAAyB,OAAOI,QAAQ,oBAAoBR,QAAeO,MAAU,G,CAvClE1B,EAAW4B,iBAAiB,SAASC,IACnCvB,EAAQwB,OAAOD,EAAIE,cAAcC,MAAM,IAGzC7B,EAAUyB,iBAAiB,SAASC,IAClCtB,EAAOuB,OAAOD,EAAIE,cAAcC,MAAM,IAGxC5B,EAAYwB,iBAAiB,SAASC,IACpCrB,EAASsB,OAAOD,EAAIE,cAAcC,MAAM,IAG1C3B,EAAKuB,iBAAiB,UAEtB,SAAkBC,GAChBA,EAAII,iBACJ,IAAK,IAAIC,EAAI,EAAGA,GAAK1B,EAAQ0B,GAAK,EAChCzB,EAAcyB,EAAG5B,GACjBA,GAASC,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst delayInput = document.querySelector('[name=\"delay\"]');\nconst stepInput = document.querySelector('[name=\"step\"]');\nconst amountInput = document.querySelector('[name=\"amount\"]');\nconst form = document.querySelector('.form');\n\nlet delay;\nlet step;\nlet amount;\n\ndelayInput.addEventListener('input', evt => {\n  delay = Number(evt.currentTarget.value);\n});\n\nstepInput.addEventListener('input', evt => {\n  step = Number(evt.currentTarget.value);\n});\n\namountInput.addEventListener('input', evt => {\n  amount = Number(evt.currentTarget.value);\n});\n\nform.addEventListener('submit', onSubmit);\n\nfunction onSubmit(evt) {\n  evt.preventDefault();\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay);\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n\n  promise\n    .then(({ position, delay }) => {\n      Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n    });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$delayInput","document","querySelector","$47d4ff9957288465$var$stepInput","$47d4ff9957288465$var$amountInput","$47d4ff9957288465$var$form","$47d4ff9957288465$var$delay","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$createPromise","position1","delay1","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","position","delay","then","delay2","Notify","success","catch","delay3","failure","addEventListener","evt","Number","currentTarget","value","preventDefault","i"],"version":3,"file":"03-promises.86535106.js.map"}